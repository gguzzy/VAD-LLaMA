model:
  arch: video_llama
  model_type: pretrain_vicuna
  freeze_vit: True
  freeze_qformer: True

  # Q-Former
  num_query_token: 32

  # Vicuna
  llama_model: "ckpt/vicuna-7b/"

  #VAD
  frozen_VAD_decoder: True
  VAD_decoder_ckpt: '' #path to phase2-trained VADor ckpt

  # llama project
  frozen_llama_proj: False
  llama_proj_model: ''
  frozen_audio_Qformer: True

  fusion_head_layers: 2
  max_frame_pos: 32
  fusion_header_type: "seqTransf"

  max_txt_len: 320
  end_sym: "###"
  prompt_path: "prompts/alignment_image.txt"
  prompt_template: '###Human: {} ###Assistant: '
  ckpt: 'ckpt/finetune-vicuna7b-v2.pth'
  imagebind_ckpt_path: "ckpt/"


datasets:
  webvid_instruct:
     data_type: video
     build_info:
       anno_dir: data/videochat_instruct_11k.json
       videos_dir: data/videos
     vis_processor:
       train:
         name: "alpro_video_train"
         n_frms: 8
         image_size: 224
     text_processor:
       train:
         name: "blip_caption"
     num_video_query_token: 32
     tokenizer_name: "ckpt/vicuna-7b/"

  vad_instruct:
      data_type: video
      build_info:
        anno_dir: data/UCF_Instruct.json
        eval_anno_dir: data/UCF_Eval.json
        videos_dir: data/ucf/
      vis_processor:
        train:
          name: "alpro_video_train"
          n_frms: 16
          image_size: 224
        eval:
          name: "alpro_video_train"
          n_frms: 16
          image_size: 224
      text_processor:
        train:
          name: "blip_caption"
        eval:
          name: "blip_caption"
      num_video_query_token: 32
      tokenizer_name: "ckpt/vicuna-7b/"
      test_flag: False

run:
  task: video_text_pretrain
  # optimizer
  lr_sched: "linear_warmup_cosine_lr"
  init_lr: 1e-5
  min_lr: 1e-6
  warmup_lr: 1e-7

  weight_decay: 0.05
  max_epoch: 30
  iters_per_epoch: 1000
  batch_size_train: 2
  batch_size_eval: 5
  num_workers: 8
  warmup_steps: 1000

  seed: 42
  output_dir: "output/phase3"

  amp: True
  resume_ckpt_path: null

  evaluate: False
  train_splits: ["train"]
#  valid_splits: ["eval"]

  device: "cuda"
  world_size: 1
  dist_url: "env://"
  distributed: True